{"version":3,"sources":["store/actions/userActions.js","store/constants/userConstants.js","components/SearchBox/SearchBox.js","components/Header/Header.js","store/constants/orderConstants.js","components/Footer/Footer.js","components/Meta.js","components/Rating/Rating.js","components/Products/Products.js","store/actions/productActions.js","store/constants/productConstants.js","components/Message/Message.js","components/UI/Spinner/Spinner.js","components/Paginate.js","components/Carousel/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","store/actions/cartActions.js","store/constants/cartConstants.js","screens/CartScreen.js","components/UI/formContainer/formContainer.js","components/UI/spinner2/spinner2.js","components/UI/backdrop/backdrop.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","store/actions/orderActions.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/orderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","store/store.js","store/reducers/productReducers.js","store/reducers/cartReducers.js","store/reducers/userReducers.js","store/reducers/orderReducers.js","index.js"],"names":["getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","onChange","target","value","placeholder","Header","useDispatch","useSelector","state","Container","to","exact","render","NavDropdown","title","name","Item","onClick","localStorage","removeItem","isAdmin","Footer","Row","Col","Meta","description","keywords","Helmet","content","defaultProps","Rating","text","color","style","Products","products","map","product","key","_id","src","image","alt","variant","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Message","children","Alert","variants","Spinner","Paginate","pages","page","Pagination","Array","keys","x","active","ProductCarousel","productTopRated","loading","error","useEffect","Carousel","pause","Image","fluid","Caption","HomeScreen","match","params","productList","ProductScreen","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","successProductReview","success","errorProductReview","alert","md","ListGroup","Card","countInStock","Form","Control","as","Button","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","class","backdrop","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","border","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ac2e640d.chunk.js","sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","import React, {useState} from 'react';\nimport \"./SearchBox.scss\"\n\nconst SearchBox = ({history}) => {\n\n    const [keyword, setKeyword] = useState('')\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(keyword.trim()) {\n            history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n       \n            <form onSubmit={submitHandler} className=\"search\">\n          <input\n          onChange={(e) => setKeyword(e.target.value)}\n            type=\"text\"\n            className=\"search__input\"\n            placeholder=\"Search for Products, brands and more\"\n          />\n          <button className=\"search__button\">\n            <span className=\"search__icon\">\n              <i className=\"fas fa-search\"></i>\n            </span>\n          </button>\n        </form>\n       \n    )\n}\n\nexport default SearchBox\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport {Route} from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\nimport { logout } from '../../store/actions/userActions';\nimport { NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport SearchBox from '../SearchBox/SearchBox'\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  return (\n    <header className=\"header\">\n      <Container className=\"header-container\">\n        <NavLink to=\"/\" exact>\n          <h2 className=\"logo\">Fly Buy</h2>\n        </NavLink>\n\n        <Route render={({history}) => <SearchBox history={history} />} />\n\n        <nav className=\"user-nav\">\n          <div className=\"user-nav__icon-box\">\n            <NavLink to=\"/cart\" className=\"user-nav__icon\">\n              <i className=\"fas fa-shopping-cart\"></i>\n              Cart\n            </NavLink>\n          </div>\n\n          {userInfo ? (\n            <NavDropdown\n              className=\"navdropdown\"\n              title={userInfo.name}\n              id=\"username\"\n            >\n              <LinkContainer to=\"/profile\">\n                <NavDropdown.Item>Profile</NavDropdown.Item>\n              </LinkContainer>\n              <NavDropdown.Item onClick={logoutHandler}>\n                Logout\n              </NavDropdown.Item>\n            </NavDropdown>\n          ) : (\n            <div className=\"user-nav__icon-box\">\n              <NavLink to=\"/login\" className=\"user-nav__icon\">\n                <i className=\"fas fa-user\"></i>\n                Sign In\n              </NavLink>\n            </div>\n          )}\n\n          {userInfo && userInfo.isAdmin && (\n            <NavDropdown\n              className=\"navdropdown ml-3\"\n              title=\"Admin\"\n              id=\"adminmenu\"\n            >\n              <LinkContainer to=\"/admin/userlist\">\n                <NavDropdown.Item>Users</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/admin/productlist\">\n                <NavDropdown.Item>Products</NavDropdown.Item>\n              </LinkContainer>\n              <LinkContainer to=\"/admin/orderlist\">\n                <NavDropdown.Item>Orders</NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          )}\n        </nav>\n      </Container>\n    </header>\n  );\n};\n\nexport default Header;\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3 text-dark\">\n            Copyright &copy; Fly Buy\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react'\nimport { Helmet } from \"react-helmet\"\n\nconst Meta = ( { title, description, keywords } ) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keyword' content={keywords} />\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: \"Welcome to FlyBuy\",\n    description: \"We sell the best top rated products\",\n    keywords: \"electionics, buy electronics\"\n}\n\nexport default Meta\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: '#f8e825',\n};\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Rating;\n","import React from 'react';\nimport './Products.scss';\nimport { Link } from 'react-router-dom';\n\nimport Rating from '../Rating/Rating';\n\nconst Products = ({ products }) => {\n  const productCards = (\n    <div className=\"products\">\n      <div className=\"products__container\">\n        {products &&\n          products.map((product) => {\n            return (\n              <div className=\"item\" key={product._id}>\n                <Link to={`/products/${product._id}`}>\n                  <img\n                    className=\"item__image\"\n                    src={product.image}\n                    alt=\"img\"\n                    variant=\"top\"\n                  />\n                </Link>\n\n                <Link to={`/products/${product._id}`}>\n                  <h3 className=\"item__heading\">{product.name}</h3>\n                </Link>\n\n                <Rating\n                  className=\"item__rating\"\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n\n                <h3 className=\"item__price\">&#8377;{product.price}</h3>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n\n  return productCards;\n};\n\nexport default Products;\n","import axios from 'axios';\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_CLEAR,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const productDetailsClear = () => {\n  return {\n    type: PRODUCT_DETAILS_CLEAR,\n  };\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products`, {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n\n\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\n\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\nexport const PRODUCT_DETAILS_CLEAR = 'PRODUCT_DETAILS_CLEAR';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variants: 'info',\n};\n\nexport default Message;\n","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = () => {\n  return <div className=\"loader\">Loading...</div>;\n};\n\nexport default Spinner;\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate","import React, {useEffect} from 'react'\nimport { useSelector, useDispatch} from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { Carousel, Image } from \"react-bootstrap\"\nimport Message from \"../Message/Message\"\nimport { listTopProducts } from \"../../store/actions/productActions\"\n\nimport \"./ProductCarousel.scss\"\n\nconst ProductCarousel = () => {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { loading, error, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n        \n    }, [dispatch])\n        return (loading ? \"  \" : error ? <Message variant='danger'>{error}</Message> : (\n            <Carousel pause='hover' className='carousel'>\n                {products.map(product => (\n                    <Carousel.Item key={product._id}>\n                        <Link to={`/products/${product._id}`}>\n                            <Image src={product.image} alt={product.name} fluid />\n                            <Carousel.Caption className='carousel-caption'>\n                            <h2>{product.name}</h2>\n                            </Carousel.Caption>\n                        </Link>\n                    </Carousel.Item>\n                ))}\n            </Carousel>\n        ))\n}\n\nexport default ProductCarousel\n","import React, { useEffect } from 'react';\nimport Meta from \"../components/Meta\";\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport Products from '../components/Products/Products';\nimport { listProducts } from '../store/actions/productActions';\nimport Message from '../components/Message/Message';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Paginate from \"../components/Paginate\"\n\nimport './Homescreen.scss';\nimport ProductCarousel from '../components/Carousel/ProductCarousel';\n\nconst HomeScreen = ({match}) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\n      {products && <h1 className=\"homescreen_products_header\">Latest Products</h1>}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (<>\n        <Products products={products} />\n        <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport Meta from \"../components/Meta\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from 'react-bootstrap';\nimport Rating from '../components/Rating/Rating';\nimport Message from '../components/Message/Message';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport {\n  listProductDetails,\n  productDetailsClear,\n  createProductReview\n} from '../store/actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../store/constants/productConstants\"\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n\n    if (successProductReview) {\n      alert('Review Submitted!')\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductDetails(match.params.id));\n    return () => {\n      dispatch(productDetailsClear());\n    };\n  }, [dispatch, match, successProductReview, match.params.id]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(match.params.id, {\n      rating,\n      comment\n    }))\n  }\n\n  return (\n    <>\n    \n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variants=\"danger\">{error}</Message>\n      ) : (\n        <>\n        <Meta title={product.name} />\n        <Row>\n          <Col md={6}>\n            <Image fluid src={product.image} alt={product.name} />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating value={product.rating} text={`${product.numReviews}`} />\n              </ListGroup.Item>\n              <ListGroup.Item>Price: &#8377;{product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: ${product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>&#8377;{product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className=\"btn-block\"\n                    type=\"button\"\n                    disabled={product.countInStock === 0}\n                  >\n                    Add To Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <h3><strong>Reviews</strong></h3>\n            \n            {product.reviews.length === 0 && <Message variant=\"primary\">No Reviews</Message>}\n            <ListGroup variant='flush'>\n              {product.reviews.map(review => (\n                 <ListGroup.Item key={review._id}>\n                 <strong>{review.name}</strong>\n                 <Rating value={review.rating} />\n                 <p>{review.createdAt && review.createdAt.substring(0, 10)}</p>\n                 <p>{review.comment}</p>\n               </ListGroup.Item>\n              ))}\n              <ListGroup.Item>\n                <h2>Write a Customer Review</h2>\n                {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                {userInfo ? (\n                  <Form onSubmit={submitHandler}>\n                  <Form.Group controlId='rating'>\n                    <Form.Label>Rating</Form.Label>\n                    <Form.Control\n                      as='select'\n                      value={rating}\n                      onChange={(e) => setRating(e.target.value)}\n                    >\n                      <option value=''>Select...</option>\n                      <option value='1'>1 - Poor</option>\n                      <option value='2'>2 - Fair</option>\n                      <option value='3'>3 - Good</option>\n                      <option value='4'>4 - Very Good</option>\n                      <option value='5'>5 - Excellent</option>\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId='comment'>\n                    <Form.Label>Comment</Form.Label>\n                    <Form.Control\n                      as='textarea'\n                      row='3'\n                      value={comment}\n                      onChange={(e) => setComment(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Button type='submit' variant='primary'>\n                    Submit\n                  </Button>\n                </Form>\n                ) : (\n                    <Message>\n                     <strong>Please <Link to='/login'>sign in</Link> to write a review{' '}</strong>\n                    </Message>\n                  )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n        </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty: qty,\n    },\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from 'react-bootstrap';\nimport Message from '../components/Message/Message';\nimport { addToCart, removeFromCart } from '../store/actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkOutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>\n          <strong>Shopping Cart</strong>\n        </h1>\n        {cartItems.length === 0 ? (\n          <Message variant=\"primary\">\n            Your cart is empty{'  '}\n            <Link to=\"/\">\n              <strong>Go Back</strong>\n            </Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>&#8377;{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              &#8377;\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-block\"\n                disabled={cartItems.length === 0}\n                onClick={checkOutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React from 'react';\nimport './spinner2.scss';\n\nconst Spinner = () => {\n  return (\n    <div class=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\n\nimport './backdrop.scss';\nimport Spinner from '../spinner2/spinner2';\n\nconst backdrop = () => (\n  <div className=\"Backdrop\">\n    <Spinner />\n  </div>\n);\n\nexport default backdrop;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport FormContainer from '../components/UI/formContainer/formContainer';\nimport Backdrop from '../components/UI/backdrop/backdrop';\nimport { login } from '../store/actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Backdrop />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            <strong>Register</strong>\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport FormContainer from '../components/UI/formContainer/formContainer';\nimport Backdrop from '../components/UI/backdrop/backdrop';\nimport { register } from '../store/actions/userActions';\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Backdrop />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            <strong>Login</strong>\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport Backdrop from '../components/UI/backdrop/backdrop';\nimport {\n  getUserDetails,\n  updateUserProfile,\n} from '../store/actions/userActions';\nimport { listMyOrders } from '../store/actions/orderActions';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport { USER_UPDATE_PROFILE_RESET } from '../store/constants/userConstants';\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { loading, success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">\"Profile Updated\"</Message>}\n        {loading && <Backdrop />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Spinner />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt && order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant=\"light\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders`, config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/UI/formContainer/formContainer';\nimport { saveShippingAddress } from '../store/actions/cartActions';\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push('/payment');\n  };\n\n  return (\n    <FormContainer>\n      {/* <CheckoutSteps step1 step2 /> */}\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Name\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"PostalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/UI/formContainer/formContainer';\nimport { savePaymentMethod } from '../store/actions/cartActions';\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('/placeorder');\n  };\n\n  return (\n    <FormContainer>\n      {/* <CheckoutSteps step1 step2 step3 /> */}\n      <h1>\n        <strong>Payment Method</strong>\n      </h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <h3>Select Method</h3>\n\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n\n            {/* <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              id=\"Stripe\"\n              name=\"paymentMethod\"\n              value=\"Stripe\"\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport { createOrder } from '../store/actions/orderActions';\nimport Backdrop from '../components/UI/backdrop/backdrop';\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  // Calculate prices\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  // Shipping price\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n\n  // Tax price\n  cart.taxPrice = addDecimals(Number((cart.itemsPrice * 0.015).toFixed(2)));\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error, loading } = orderCreate;\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  return (\n    <>\n      {loading && <Backdrop />}\n      {/* <CheckoutSteps step1 step2 step3 step4 /> */}\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>&nbsp;&nbsp;&nbsp;\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method:</strong>&nbsp;&nbsp;&nbsp;\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>OrderItems</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x &#8377;{item.price}&nbsp;&nbsp; =\n                          &nbsp;&nbsp;&#8377;\n                          {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"fluid\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Backdrop from '../components/UI/backdrop/backdrop';\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../store/actions/orderActions';\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../store/constants/orderConstants';\n\nconst OrderScreen = ({ history, match }) => {\n  const orderId = match.params.id;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  if (!loading) {\n    // Calculate price\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || order._id !== orderId || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order, userInfo, history]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Spinner />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>\n        <strong>Order ID: </strong>\n        {order._id}\n      </h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              {/* <p>\n                <strong>Name: </strong> {order.user.name}\n              </p> */}\n              <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              <p>\n                <strong>Address:</strong>&nbsp;&nbsp;&nbsp;\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method:</strong>&nbsp;&nbsp;&nbsp;\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>OrderItems</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x &#8377;{item.price}&nbsp;&nbsp; =\n                          &nbsp;&nbsp;&#8377;\n                          {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"fluid\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>&#8377;&nbsp;&nbsp;{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Spinner />}\n                  {!sdkReady ? (\n                    <Spinner />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n\n              {loadingDeliver && <Backdrop />}\n\n              {userInfo &&  userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={deliverHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport { listUsers, deleteUser } from '../store/actions/userActions';\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped border hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport FormContainer from '../components/UI/formContainer/formContainer';\nimport Backdrop from '../components/UI/backdrop/backdrop';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport { getUserDetails, updateUser } from '../store/actions/userActions';\nimport { USER_UPDATE_RESET } from '../store/constants/userConstants';\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState('');\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, userId, user, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userList\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Backdrop />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Spinner />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Backdrop from '../components/UI/backdrop/backdrop';\nimport Paginate from '../components/Paginate';\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../store/actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../store/constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login');\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts('', pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Backdrop />}\n      {loadingCreate && <Backdrop />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n        <Table striped border hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>BRAND</th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>&#8377;&nbsp;{product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(product._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <Paginate isAdmin={true} pages={pages} page={page} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport Spinner2 from '../components/UI/spinner2/spinner2';\nimport Backdrop from '../components/UI/backdrop/backdrop';\nimport FormContainer from '../components/UI/formContainer/formContainer';\nimport {\n  listProductDetails,\n  updateProduct,\n} from '../store/actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../store/constants/productConstants';\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n\n      const { data } = await axios.post('/api/upload', formData, config);\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Backdrop />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Backdrop />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Spinner2 />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message/Message';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport { listOrders } from '../store/actions/orderActions';\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt && order.createdAt.substring(0, 10)}</td>\n                <td>&#8377;&nbsp;{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n//components\n\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/orderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n//bootstrap\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/products/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/admin/productlist\" component={ProductListScreen} exact />\n          <Route path=\"/admin/productlist/:pageNumber\" component={ProductListScreen} exact />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer\n} from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers';\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\n  ? JSON.parse(localStorage.getItem('paymentMethod'))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_CLEAR,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL\n} from '../constants/productConstants';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload.products, pages:action.payload.pages, page: action.payload.page };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] }, loading: false },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_DETAILS_CLEAR:\n      return { ...state, loading: false, product: { reviews: [] } };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\n\n\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n\n\nexport const productTopRatedReducer = (state = { products: []}, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, product: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { ...state, loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_PROFILE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = { loading: false }, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_LIST_MY_RESET:\n      return {\n        orders: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\n\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}